services:
    mongodb-server-custom:
        container_name: mongodb-primary
        user: root
        # ports:
        #     - 27017:27017
        build:
            context: .
            dockerfile: Dockerfile
        network_mode: "host"
        # networks:
        #     - mongo-network
        volumes:
            - ./data/db:/data/db:rw
            - ./data/configdb:/data/configdb:rw
            # - ./scripts:/docker-entrypoint-initdb.d:ro
        env_file:
            - .env
        depends_on:
            - mongodb-community-rep1
            - mongodb-community-rep2
            - mongodb-community-rep3
        links:
            - mongodb-community-rep1
            - mongodb-community-rep2
            - mongodb-community-rep3
        command: ["mongod", "--replSet", "rs0", "--port", "27017", "--bind_ip_all", "--keyFile", "/opt/keyfile"]
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb-primary:27017',priority:4},{_id:1,host:'mongodb-rep1:27018',priority:3},{_id:2,host:'mongodb-rep2:27019',priority:2},{_id:3,host:'mongodb-rep3:27020',priority:1}]}); }" | mongosh --port 27017 --quiet -u ${MONGODB_INITDB_ROOT_USERNAME} -p ${MONGODB_INITDB_ROOT_PASSWORD}
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        restart: always

    mongodb-community-rep1:
        container_name: mongodb-rep1
        user: root
        # ports:
        #     - 27018:27018
        image: mongodb-mongodb-server-custom
        network_mode: "host"
        # networks:
        #     - mongo-network
        volumes:
            - ./data1/db:/data/db:rw
            - ./data1/configdb:/data/configdb:rw
        env_file:
            - .env
        command: ["mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0", "--port", "27018", "--keyFile", "/opt/keyfile"]
        restart: always

    
    mongodb-community-rep2:
        container_name: mongodb-rep2
        user: root
        # ports:
        #     - 27019:27019
        image: mongodb-mongodb-server-custom
        network_mode: "host"
        # networks:
        #     - mongo-network
        volumes:
            - ./data2/db:/data/db:rw
            - ./data2/configdb:/data/configdb:rw
        env_file:
            - .env
        command: ["mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0", "--port", "27019", "--keyFile", "/opt/keyfile"]
        restart: always

    mongodb-community-rep3:
        container_name: mongodb-rep3
        user: root
        # ports:
        #     - 27020:27020
        image: mongodb-mongodb-server-custom
        network_mode: "host"
        # networks:
        #     - mongo-network
        volumes:
            - ./data3/db:/data/db:rw
            - ./data3/configdb:/data/configdb:rw
        env_file:
            - .env
        command: ["mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0", "--port", "27020", "--keyFile", "/opt/keyfile"]
        restart: always

networks:
  mongo-network:
    driver: bridge

